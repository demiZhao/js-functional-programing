{"version":3,"sources":["clock.js","app.js","index.js"],"names":["formatTime","time","getHhmmss","date","Date","hours","getHours","minutes","getMinutes","seconds","getSeconds","ClockSetting","memo","title","setTime","useState","error","setError","hhRef","useRef","mmRef","ssRef","className","htmlFor","ref","type","id","maxLength","data-testid","onClick","mm","ss","current","value","isNaN","setHours","setMinutes","setSeconds","getTime","DigitalClock","useContext","TimeContext","AnalogClock","secondsStyle","transform","minutesStyle","hoursStyle","style","createContext","App","console","log","useEffect","interval","setInterval","clearInterval","Provider","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.03781a43.chunk.js","sourcesContent":["import { useRef, useState, useContext, memo } from \"react\";\r\nimport { TimeContext } from \"./app\";\r\n\r\nconst formatTime = (time) => {\r\n  return time < 10 ? `0${time}` : time;\r\n};\r\n\r\nconst getTime = ({ hours, minutes, seconds }) => {\r\n  const date = new Date();\r\n  date.setHours(hours);\r\n  date.setMinutes(minutes);\r\n  date.setSeconds(seconds);\r\n  return date.getTime();\r\n};\r\n\r\nconst getHhmmss = (time) => {\r\n  const date = new Date(time);\r\n  const hours = date.getHours();\r\n  const minutes = date.getMinutes();\r\n  const seconds = date.getSeconds();\r\n  return { hours, minutes, seconds };\r\n};\r\n\r\nconst ClockSetting = memo(({title, setTime }) => {\r\n  // console.log('Clocksetting rendered')\r\n\r\n  const [error, setError] = useState(null);\r\n  const hasError = (hh, mm, ss) => isNaN(hh) || isNaN(mm) || isNaN(ss);\r\n\r\n  const hhRef = useRef();\r\n  const mmRef = useRef();\r\n  const ssRef = useRef();\r\n\r\n  const reset = () => {\r\n    hhRef.current.value = \"\";\r\n    mmRef.current.value = \"\";\r\n    ssRef.current.value = \"\";\r\n  };\r\n\r\n  const handleClick = () => {\r\n    setError(null);\r\n\r\n    const hours = hhRef.current.value;\r\n    const minutes = mmRef.current.value;\r\n    const seconds = ssRef.current.value;\r\n\r\n    if (hasError(hours, minutes, seconds)) {\r\n      setError(\"Error! Please enter number.\");\r\n    } else {\r\n      setTime(getTime({ hours, minutes, seconds }));\r\n      reset();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={\"clock-settings\"}>\r\n      {error && <div className={\"error\"}>{error}</div>}\r\n      <div>\r\n        <label htmlFor={`${title}hh`}>{'hh:'}</label>\r\n        <input\r\n          ref={hhRef}\r\n          type=\"text\"\r\n          id={`${title}hh`}\r\n          maxLength=\"2\"\r\n          data-testid=\"hh\"\r\n        />\r\n        <label htmlFor={`${title}mm`}>{'mm:'}</label>\r\n        <input\r\n          ref={mmRef}\r\n          type=\"text\"\r\n          id={`${title}mm`}\r\n          maxLength=\"2\"\r\n          data-testid=\"mm\"\r\n        />\r\n        <label htmlFor={`${title}ss`}>{'ss:'}</label>\r\n        <input\r\n          ref={ssRef}\r\n          type=\"text\"\r\n          id={`${title}ss`}\r\n          maxLength=\"2\"\r\n          data-testid=\"ss\"\r\n        />\r\n        <button data-testid=\"btn\" className={\"btn-primary\"} onClick={handleClick}>\r\n          Set\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n})\r\n\r\nconst DigitalClock = ({ title }) => {\r\n  // console.log('DigitalClock rendered')\r\n\r\n  const { time, setTime } = useContext(TimeContext);\r\n  const { hours, minutes, seconds } = getHhmmss(time);\r\n\r\n  return (\r\n    <div className={\"clock\"}>\r\n      <h3>{title}</h3>\r\n      <div className={\"digital-clock\"}>\r\n        <span data-testid=\"time\">{formatTime(hours)}:{formatTime(minutes)}:{formatTime(seconds)}</span>\r\n      </div>\r\n      <ClockSetting setTime={setTime} title={title}/>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst AnalogClock = ({ title }) => {\r\n  // console.log('AnalogClock rendered')\r\n  const { time, setTime } = useContext(TimeContext);\r\n  const { hours, minutes, seconds } = getHhmmss(time);\r\n\r\n  const secondsStyle = {\r\n    transform: `rotate(${seconds * 6}deg)`\r\n  };\r\n  const minutesStyle = {\r\n    transform: `rotate(${minutes * 6}deg)`\r\n  };\r\n  const hoursStyle = {\r\n    transform: `rotate(${hours * 30}deg)`\r\n  };\r\n\r\n  return (\r\n    <div className={\"clock\"}>\r\n      <h3>{title}</h3>\r\n      <div className={\"analog-clock\"}>\r\n        <div className={\"dial seconds\"} style={secondsStyle} />\r\n        <div className={\"dial minutes\"} style={minutesStyle} />\r\n        <div className={\"dial hours\"} style={hoursStyle} />\r\n      </div>\r\n      <ClockSetting setTime={setTime} title={title} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport {\r\n  ClockSetting,\r\n  DigitalClock,\r\n  AnalogClock,\r\n  formatTime,\r\n  getTime,\r\n  getHhmmss\r\n};\r\n","import { createContext, useState, useEffect} from \"react\";\nimport { DigitalClock, AnalogClock } from \"./clock\";\nimport \"./styles.scss\";\n\nexport const TimeContext = createContext();\n\nconst App = () => {\n  console.log('App rendered')\n\n  const initTime = () => new Date().getTime();\n  const [time, setTime] = useState(initTime());\n\n  useEffect(() => {\n    const handleTick = () => {\n      setTime(time + 1000);\n    };\n    const interval = setInterval(handleTick, 1000);\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, [time]);\n\n  return (\n    <TimeContext.Provider value={{ time, setTime }}>\n      <div className=\"App\">\n        <AnalogClock title=\"Analog\" />\n        <DigitalClock title=\"Digital\" />\n      </div>\n    </TimeContext.Provider>\n  );\n};\n\nexport default App;\n","import ReactDOM from \"react-dom\";\nimport App from \"./app\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}