{"version":3,"sources":["clock.js","app.js","index.js"],"names":["formatTime","time","getHhmmss","date","Date","hours","getHours","minutes","getMinutes","seconds","getSeconds","ClockSetting","memo","setTime","useContext","TimeContext","useState","error","setError","hhRef","useRef","mmRef","ssRef","className","ref","type","name","placeholder","maxLength","onClick","mm","ss","current","value","isNaN","setHours","setMinutes","setSeconds","getTime","DigitalClock","title","AnalogClock","secondsStyle","transform","minutesStyle","hoursStyle","style","createContext","App","useEffect","interval","setInterval","clearInterval","Provider","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.28d1064e.chunk.js","sourcesContent":["import { useRef, useState, useContext, memo } from \"react\";\r\nimport { TimeContext } from \"./app\";\r\n\r\nconst formatTime = (time) => {\r\n  return time < 10 ? `0${time}` : time;\r\n};\r\n\r\nconst getTime = ({ hours, minutes, seconds }) => {\r\n  const date = new Date();\r\n  date.setHours(hours);\r\n  date.setMinutes(minutes);\r\n  date.setSeconds(seconds);\r\n  return date.getTime();\r\n};\r\n\r\nconst getHhmmss = (time) => {\r\n  const date = new Date(time);\r\n  const hours = date.getHours();\r\n  const minutes = date.getMinutes();\r\n  const seconds = date.getSeconds();\r\n  return { hours, minutes, seconds };\r\n};\r\n\r\nconst ClockSetting = memo(() => {\r\n  const { setTime } = useContext(TimeContext);\r\n\r\n  const [error, setError] = useState(null);\r\n  const hasError = (hh, mm, ss) => isNaN(hh) || isNaN(mm) || isNaN(ss);\r\n\r\n  const hhRef = useRef();\r\n  const mmRef = useRef();\r\n  const ssRef = useRef();\r\n\r\n  const reset = () => {\r\n    hhRef.current.value = \"\";\r\n    mmRef.current.value = \"\";\r\n    ssRef.current.value = \"\";\r\n  };\r\n\r\n  const handleClick = () => {\r\n    const hours = hhRef.current.value;\r\n    const minutes = mmRef.current.value;\r\n    const seconds = ssRef.current.value;\r\n\r\n    if (hasError(hours, minutes, seconds)) {\r\n      setError(\"Error! Please enter number.\");\r\n    } else {\r\n      setError(null);\r\n      setTime(getTime({ hours, minutes, seconds }));\r\n      reset();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={\"clock-settings\"}>\r\n      {error && <div className={\"error\"}>{error}</div>}\r\n      <div>\r\n        <input\r\n          ref={hhRef}\r\n          type=\"text\"\r\n          name=\"hh\"\r\n          placeholder=\"hh\"\r\n          maxLength=\"2\"\r\n        />\r\n        {\":\"}\r\n        <input\r\n          ref={mmRef}\r\n          type=\"text\"\r\n          name=\"mm\"\r\n          placeholder=\"mm\"\r\n          maxLength=\"2\"\r\n        />\r\n        {\":\"}\r\n        <input\r\n          ref={ssRef}\r\n          type=\"text\"\r\n          name=\"ss\"\r\n          placeholder=\"ss\"\r\n          maxLength=\"2\"\r\n        />\r\n        <button className={\"btn-primary\"} onClick={handleClick}>\r\n          Set\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n})\r\n\r\nconst DigitalClock = ({ title }) => {\r\n  const { time } = useContext(TimeContext);\r\n  const { hours, minutes, seconds } = getHhmmss(time);\r\n\r\n  return (\r\n    <div className={\"clock\"}>\r\n      <h3>{title}</h3>\r\n      <div className={\"digital-clock\"}>\r\n        {formatTime(hours)}:{formatTime(minutes)}:{formatTime(seconds)}\r\n      </div>\r\n      <ClockSetting />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst AnalogClock = ({ title }) => {\r\n  const { time } = useContext(TimeContext);\r\n  const { hours, minutes, seconds } = getHhmmss(time);\r\n\r\n  const secondsStyle = {\r\n    transform: `rotate(${seconds * 6}deg)`\r\n  };\r\n  const minutesStyle = {\r\n    transform: `rotate(${minutes * 6}deg)`\r\n  };\r\n  const hoursStyle = {\r\n    transform: `rotate(${hours * 30}deg)`\r\n  };\r\n\r\n  return (\r\n    <div className={\"clock\"}>\r\n      <h3>{title}</h3>\r\n      <div className={\"analog-clock\"}>\r\n        <div className={\"dial seconds\"} style={secondsStyle} />\r\n        <div className={\"dial minutes\"} style={minutesStyle} />\r\n        <div className={\"dial hours\"} style={hoursStyle} />\r\n      </div>\r\n      <ClockSetting />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport {\r\n  ClockSetting,\r\n  DigitalClock,\r\n  AnalogClock,\r\n  formatTime,\r\n  getTime,\r\n  getHhmmss\r\n};\r\n","import { createContext, useState, useEffect, useContext } from \"react\";\nimport { DigitalClock, AnalogClock } from \"./clock\";\nimport \"./styles.scss\";\n\nexport const TimeContext = createContext();\n\nconst App = () => {\n  const initTime = () => new Date().getTime();\n  const [time, setTime] = useState(initTime());\n\n  useEffect(() => {\n    const handleTick = () => {\n      setTime(time + 1000);\n    };\n    const interval = setInterval(handleTick, 1000);\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, [time]);\n\n  return (\n    <TimeContext.Provider value={{ time, setTime }}>\n      <div className=\"App\">\n        <AnalogClock title=\"Analog\" />\n        <DigitalClock title=\"Digital\" />\n      </div>\n    </TimeContext.Provider>\n  );\n};\n\nexport default App;\n","import ReactDOM from \"react-dom\";\nimport App from \"./app\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}